export const BATTLESHIP_GAME_ABI = [
  {
    type: 'constructor',
    inputs: [
      {
        name: 'collectionMetadata',
        type: 'string',
        internalType: 'string',
      },
      { name: 'maxSupply', type: 'uint256', internalType: 'uint256' },
      {
        name: 'royaltyRecipient',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'royaltyPercentageBps',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'RMRK_INTERFACE',
    inputs: [],
    outputs: [
      { name: 'rmrkInterface', type: 'bytes4', internalType: 'bytes4' },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'VERSION',
    inputs: [],
    outputs: [{ name: 'version', type: 'string', internalType: 'string' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: '_ownedTokens',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'acceptChild',
    inputs: [
      { name: 'parentId', type: 'uint256', internalType: 'uint256' },
      { name: 'childIndex', type: 'uint256', internalType: 'uint256' },
      { name: 'childAddress', type: 'address', internalType: 'address' },
      { name: 'childId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'addChild',
    inputs: [
      { name: 'parentId', type: 'uint256', internalType: 'uint256' },
      { name: 'childId', type: 'uint256', internalType: 'uint256' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'approve',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'balanceOf',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: 'balance', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'burn',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'burn',
    inputs: [
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'maxChildrenBurns', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      { name: 'burnedChildren', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'childOf',
    inputs: [
      { name: 'parentId', type: 'uint256', internalType: 'uint256' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      {
        name: 'child',
        type: 'tuple',
        internalType: 'struct IERC7401.Child',
        components: [
          { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'contractAddress',
            type: 'address',
            internalType: 'address',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'childrenOf',
    inputs: [{ name: 'parentId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: 'children',
        type: 'tuple[]',
        internalType: 'struct IERC7401.Child[]',
        components: [
          { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'contractAddress',
            type: 'address',
            internalType: 'address',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'contractURI',
    inputs: [],
    outputs: [{ name: 'contractURI_', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'createGame',
    inputs: [
      { name: '_player1', type: 'address', internalType: 'address' },
      { name: '_player2', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'directOwnerOf',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'owner_', type: 'address', internalType: 'address' },
      { name: 'parentId', type: 'uint256', internalType: 'uint256' },
      { name: 'isNFT', type: 'bool', internalType: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'existingUser',
    inputs: [{ name: '_user', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'gameId',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'games',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: 'player1',
        type: 'tuple',
        internalType: 'struct Player',
        components: [
          { name: 'playerAddress', type: 'address', internalType: 'address' },
          { name: 'storeId', type: 'string', internalType: 'string' },
          { name: 'moves', type: 'uint8[]', internalType: 'uint8[]' },
          { name: 'moveIndex', type: 'uint8', internalType: 'uint8' },
        ],
      },
      {
        name: 'player2',
        type: 'tuple',
        internalType: 'struct Player',
        components: [
          { name: 'playerAddress', type: 'address', internalType: 'address' },
          { name: 'storeId', type: 'string', internalType: 'string' },
          { name: 'moves', type: 'uint8[]', internalType: 'uint8[]' },
          { name: 'moveIndex', type: 'uint8', internalType: 'uint8' },
        ],
      },
      { name: 'next_turn', type: 'uint8', internalType: 'enum PlayerType' },
      { name: 'hasStarted', type: 'bool', internalType: 'bool' },
      { name: 'hasEnded', type: 'bool', internalType: 'bool' },
      { name: 'winner', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getApproved',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: 'approved', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRoyaltyPercentage',
    inputs: [],
    outputs: [
      {
        name: 'royaltyPercentageBps',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRoyaltyRecipient',
    inputs: [],
    outputs: [{ name: 'recipient', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isApprovedForAll',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'operator', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'isApproved', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isContributor',
    inputs: [{ name: 'contributor', type: 'address', internalType: 'address' }],
    outputs: [{ name: 'isContributor_', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isTransferable',
    inputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'isTransferable_', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'manageContributor',
    inputs: [
      { name: 'contributor', type: 'address', internalType: 'address' },
      { name: 'grantRole', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'maxSupply',
    inputs: [],
    outputs: [{ name: 'maxSupply_', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: 'name_', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'nestTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'destinationId', type: 'uint256', internalType: 'uint256' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'newUser',
    inputs: [{ name: '_user', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: 'owner_', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ownerOf',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: 'owner_', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pendingChildOf',
    inputs: [
      { name: 'parentId', type: 'uint256', internalType: 'uint256' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      {
        name: 'child',
        type: 'tuple',
        internalType: 'struct IERC7401.Child',
        components: [
          { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'contractAddress',
            type: 'address',
            internalType: 'address',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pendingChildrenOf',
    inputs: [{ name: 'parentId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: 'children',
        type: 'tuple[]',
        internalType: 'struct IERC7401.Child[]',
        components: [
          { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'contractAddress',
            type: 'address',
            internalType: 'address',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'playMove',
    inputs: [
      { name: 'player', type: 'uint8', internalType: 'enum PlayerType' },
      { name: '_gameId', type: 'uint256', internalType: 'uint256' },
      { name: 'move', type: 'uint8', internalType: 'uint8' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'register',
    inputs: [
      { name: '_user', type: 'address', internalType: 'address' },
      { name: 'username', type: 'string', internalType: 'string' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'rejectAllChildren',
    inputs: [
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'maxRejections', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'royaltyInfo',
    inputs: [
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'salePrice', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      { name: 'receiver', type: 'address', internalType: 'address' },
      { name: 'royaltyAmount', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'safeTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'safeTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setApprovalForAll',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'approved', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setAutoAcceptCollection',
    inputs: [
      { name: 'collection', type: 'address', internalType: 'address' },
      { name: 'autoAccept', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setStoreId',
    inputs: [
      { name: 'player', type: 'uint8', internalType: 'enum PlayerType' },
      { name: '_gameId', type: 'uint256', internalType: 'uint256' },
      { name: '_storeId', type: 'string', internalType: 'string' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'symbol',
    inputs: [],
    outputs: [{ name: 'symbol_', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenByIndex',
    inputs: [{ name: 'index', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenOfOwnerByIndex',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenURI',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: 'tokenURI_', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalAssets',
    inputs: [],
    outputs: [
      { name: 'totalAssets_', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalSupply',
    inputs: [],
    outputs: [
      { name: 'totalSupply_', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferChild',
    inputs: [
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'destinationId', type: 'uint256', internalType: 'uint256' },
      { name: 'childIndex', type: 'uint256', internalType: 'uint256' },
      { name: 'childAddress', type: 'address', internalType: 'address' },
      { name: 'childId', type: 'uint256', internalType: 'uint256' },
      { name: 'isPending', type: 'bool', internalType: 'bool' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateRoyaltyRecipient',
    inputs: [
      {
        name: 'newRoyaltyRecipient',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'usernameAvailable',
    inputs: [{ name: '_name', type: 'string', internalType: 'string' }],
    outputs: [],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'users',
    inputs: [{ name: 'username', type: 'string', internalType: 'string' }],
    outputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'taken', type: 'bool', internalType: 'bool' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'withdrawRaised',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'AllChildrenRejected',
    inputs: [
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Approval',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'approved',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ApprovalForAll',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'operator',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'approved',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChildAccepted',
    inputs: [
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'childIndex',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'childAddress',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'childId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChildProposed',
    inputs: [
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'childIndex',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'childAddress',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'childId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChildTransferred',
    inputs: [
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'childIndex',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'childAddress',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'childId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'fromPending',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'toZero',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ContributorUpdate',
    inputs: [
      {
        name: 'contributor',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'isContributor',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'NestTransfer',
    inputs: [
      {
        name: 'from',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'fromTokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'toTokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Transfer',
    inputs: [
      {
        name: 'from',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'DuplicateMove', inputs: [] },
  {
    type: 'error',
    name: 'ERC721AddressZeroIsNotaValidOwner',
    inputs: [],
  },
  { type: 'error', name: 'ERC721ApprovalToCurrentOwner', inputs: [] },
  {
    type: 'error',
    name: 'ERC721ApproveCallerIsNotOwnerNorApprovedForAll',
    inputs: [],
  },
  { type: 'error', name: 'ERC721ApproveToCaller', inputs: [] },
  { type: 'error', name: 'ERC721InvalidTokenId', inputs: [] },
  { type: 'error', name: 'ERC721MintToTheZeroAddress', inputs: [] },
  { type: 'error', name: 'ERC721NotApprovedOrOwner', inputs: [] },
  {
    type: 'error',
    name: 'ERC721OutOfBoundsIndex',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'index', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'ERC721TokenAlreadyMinted', inputs: [] },
  { type: 'error', name: 'ERC721TransferFromIncorrectOwner', inputs: [] },
  {
    type: 'error',
    name: 'ERC721TransferToNonReceiverImplementer',
    inputs: [],
  },
  { type: 'error', name: 'ERC721TransferToTheZeroAddress', inputs: [] },
  { type: 'error', name: 'GameAlreadyStarted', inputs: [] },
  { type: 'error', name: 'GameEnded', inputs: [] },
  { type: 'error', name: 'InvalidPlayer', inputs: [] },
  { type: 'error', name: 'InvalidTurn', inputs: [] },
  { type: 'error', name: 'NotANewUser', inputs: [] },
  { type: 'error', name: 'NotAPlayer', inputs: [] },
  { type: 'error', name: 'RMRKCannotTransferSoulbound', inputs: [] },
  { type: 'error', name: 'RMRKChildAlreadyExists', inputs: [] },
  { type: 'error', name: 'RMRKChildIndexOutOfRange', inputs: [] },
  { type: 'error', name: 'RMRKIdZeroForbidden', inputs: [] },
  { type: 'error', name: 'RMRKIsNotContract', inputs: [] },
  { type: 'error', name: 'RMRKMaxPendingChildrenReached', inputs: [] },
  {
    type: 'error',
    name: 'RMRKMaxRecursiveBurnsReached',
    inputs: [
      { name: 'childContract', type: 'address', internalType: 'address' },
      { name: 'childId', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'RMRKMintOverMax', inputs: [] },
  { type: 'error', name: 'RMRKMintZero', inputs: [] },
  { type: 'error', name: 'RMRKNestableTooDeep', inputs: [] },
  { type: 'error', name: 'RMRKNestableTransferToDescendant', inputs: [] },
  {
    type: 'error',
    name: 'RMRKNestableTransferToNonRMRKNestableImplementer',
    inputs: [],
  },
  { type: 'error', name: 'RMRKNestableTransferToSelf', inputs: [] },
  { type: 'error', name: 'RMRKNewContributorIsZeroAddress', inputs: [] },
  { type: 'error', name: 'RMRKNewOwnerIsZeroAddress', inputs: [] },
  { type: 'error', name: 'RMRKNotApprovedOrDirectOwner', inputs: [] },
  { type: 'error', name: 'RMRKNotOwner', inputs: [] },
  { type: 'error', name: 'RMRKNotOwnerOrContributor', inputs: [] },
  { type: 'error', name: 'RMRKPendingChildIndexOutOfRange', inputs: [] },
  { type: 'error', name: 'RMRKRoyaltiesTooHigh', inputs: [] },
  { type: 'error', name: 'RMRKUnexpectedChildId', inputs: [] },
  { type: 'error', name: 'RMRKUnexpectedNumberOfChildren', inputs: [] },
  { type: 'error', name: 'UserNotFound', inputs: [] },
  { type: 'error', name: 'UsernameTaken', inputs: [] },
] as const;
